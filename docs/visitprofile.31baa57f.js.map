{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,W,I,E,A,G,E,GCEA,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,G,E,Q,S,C,C,C,E,E,E,O,C,oB,I,G,E,E,O,C,e,I,G,E,E,O,C,c,I,G,E,E,O,C,c,I,G,E,E,O,C,W,I,G,E,E,O,C,a,I,G,E,E,O,C,oB,I,G,E,E,O,C,a,I,G,E,E,O,C,a,I,G,E,E,O,C,gB,I,GCVA,IAAM,EAAU,sFAEV,EAAS,CACX,eAAgB,iCACpB,EAgBA,eAAe,EAAkB,CAAa,EAC1C,IAAM,EAAM,EAAU,CAAC,EAAE,EAAM,cAAc,CAAC,CAOxC,EAAW,MAAM,MAAM,EALb,CACZ,OAAQ,MACR,QAAS,CACb,GAKA,OAFa,MAAM,EAAS,IAAI,EAGpC,CAEA,eAAe,IAQX,IAAM,EAAW,MAAM,MAPX,EAAU,iBAEN,CACZ,OAAQ,MACR,QAAS,CACb,GAGM,EAAO,MAAM,EAAS,IAAI,GAEhC,OADA,QAAQ,GAAG,CAAC,GACL,CACX,CAEA,eAAe,EAAY,CAAc,EACrC,IAAM,EAAM,EAAU,CAAC,SAAS,EAAE,EAAO,KAAK,CAAC,CAOzC,EAAW,MAAM,MAAM,EALb,CACZ,OAAQ,MACR,QAAS,CACb,GAGM,EAAO,MAAM,EAAS,IAAI,GAEhC,OADA,QAAQ,GAAG,CAAC,GACL,CACX,CAE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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/modules/fetch.ts","src/modules/createAndAppend.ts","node_modules/@parcel/runtime-js/lib/runtime-cf123e642fc0f03f.js","node_modules/@parcel/runtime-js/lib/runtime-00f3f18eddd709f1.js","node_modules/@parcel/runtime-js/lib/runtime-51712c928d8c99c0.js","node_modules/@parcel/runtime-js/lib/runtime-b3e298a7e1b9455a.js","src/modules/visitprofile.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirefc52\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirefc52\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nparcelRegister(\"1ahZW\", function(module, exports) {\n\n$parcel$export(module.exports, \"getpostsFromUsers\", () => $7ce76dd366e58a77$export$757394d2bc56a6a9);\n$parcel$export(module.exports, \"getLoginUser\", () => $7ce76dd366e58a77$export$2f82891cea95bf3d);\n$parcel$export(module.exports, \"getYourUser\", () => $7ce76dd366e58a77$export$26939fe54a60a9f0);\n$parcel$export(module.exports, \"postNewUser\", () => $7ce76dd366e58a77$export$6001962e8d53e271);\n$parcel$export(module.exports, \"allUsers\", () => $7ce76dd366e58a77$export$a2e86eb8fefb17fd);\n$parcel$export(module.exports, \"postForum1\", () => $7ce76dd366e58a77$export$b6c7da38e66215af);\n$parcel$export(module.exports, \"postCommentForum1\", () => $7ce76dd366e58a77$export$3e7a6a8197e1d931);\n$parcel$export(module.exports, \"postForum2\", () => $7ce76dd366e58a77$export$a74f6de8490a9db3);\n$parcel$export(module.exports, \"postForum3\", () => $7ce76dd366e58a77$export$b7c2ab1ee09212e3);\n$parcel$export(module.exports, \"deleteAccount\", () => $7ce76dd366e58a77$export$45abfc3976589d02);\nconst $7ce76dd366e58a77$var$baseUrl = \"https://slutprojekt-js2-socialmedia-default-rtdb.europe-west1.firebasedatabase.app/\";\nconst $7ce76dd366e58a77$var$header = {\n    \"Content-type\": \"application/json; charset=UTF-8\"\n};\nasync function $7ce76dd366e58a77$export$3988ae62b71be9a3() {\n    const URL = $7ce76dd366e58a77$var$baseUrl + \".json\";\n    const options = {\n        method: \"GET\",\n        headers: $7ce76dd366e58a77$var$header\n    };\n    const response = await fetch(URL, options);\n    const info = await response.json();\n    console.log(info);\n    return info;\n}\nasync function $7ce76dd366e58a77$export$757394d2bc56a6a9(forum) {\n    const URL = $7ce76dd366e58a77$var$baseUrl + `${forum}/0/posts/.json`;\n    const options = {\n        method: \"GET\",\n        headers: $7ce76dd366e58a77$var$header\n    };\n    const response = await fetch(URL, options);\n    const info = await response.json();\n    // console.log(info)\n    return info;\n}\nasync function $7ce76dd366e58a77$export$2f82891cea95bf3d() {\n    const URL = $7ce76dd366e58a77$var$baseUrl + \"AllUsers/.json\";\n    const options = {\n        method: \"GET\",\n        headers: $7ce76dd366e58a77$var$header\n    };\n    const response = await fetch(URL, options);\n    const data = await response.json();\n    console.log(data);\n    return data;\n}\nasync function $7ce76dd366e58a77$export$26939fe54a60a9f0(userId) {\n    const URL = $7ce76dd366e58a77$var$baseUrl + `AllUsers/${userId}.json`;\n    const options = {\n        method: \"GET\",\n        headers: $7ce76dd366e58a77$var$header\n    };\n    const response = await fetch(URL, options);\n    const data = await response.json();\n    console.log(data);\n    return data;\n}\nasync function $7ce76dd366e58a77$export$6001962e8d53e271(newUser) {\n    const url = $7ce76dd366e58a77$var$baseUrl + \"AllUsers/.json\";\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(newUser),\n        headers: $7ce76dd366e58a77$var$header\n    };\n    const response = await fetch(url, options);\n    const info = await response.json();\n    console.log(info);\n    return info;\n}\nasync function $7ce76dd366e58a77$export$a2e86eb8fefb17fd() {\n    const url = \"https://slutprojekt-js2-socialmedia-default-rtdb.europe-west1.firebasedatabase.app/AllUsers.json\";\n    const options = {\n        method: \"GET\",\n        headers: $7ce76dd366e58a77$var$header\n    };\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(\"Error fetching all users:\", error);\n        throw error;\n    }\n}\nasync function $7ce76dd366e58a77$export$b6c7da38e66215af(postData) {\n    const URL = $7ce76dd366e58a77$var$baseUrl + \"forum1/0/posts.json\";\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(postData),\n        headers: $7ce76dd366e58a77$var$header\n    };\n    const response = await fetch(URL, options);\n    const info = await response.json();\n    console.log(info);\n    return info;\n}\nasync function $7ce76dd366e58a77$export$3e7a6a8197e1d931(comment, postId) {\n    const URL = $7ce76dd366e58a77$var$baseUrl + `forum1/0/comments/${postId}/allCommentId.json`;\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(comment),\n        headers: $7ce76dd366e58a77$var$header\n    };\n    const response = await fetch(URL, options);\n    const info = await response.json();\n    console.log(info);\n    return info;\n}\n// async function getCommentsFromForum(forum: string, postId: string) {\n//     const URL = baseUrl + `${forum}/0/comments/${postId}.json`;\n//     const options = {\n//         method: 'GET',\n//         headers: header\n//     }\n//     const response = await fetch(URL, options);\n//     const info = await response.json();\n//     console.log(info)\n//     return info;\n// }\nasync function $7ce76dd366e58a77$export$a74f6de8490a9db3(postData) {\n    const URL = $7ce76dd366e58a77$var$baseUrl + \"forum2/0/posts.json\";\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(postData),\n        headers: $7ce76dd366e58a77$var$header\n    };\n    const response = await fetch(URL, options);\n    const info = await response.json();\n    console.log(info);\n    return info;\n}\nasync function $7ce76dd366e58a77$export$b7c2ab1ee09212e3(postData) {\n    const URL = $7ce76dd366e58a77$var$baseUrl + \"forum3/0/posts.json\";\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(postData),\n        headers: $7ce76dd366e58a77$var$header\n    };\n    const response = await fetch(URL, options);\n    const info = await response.json();\n    console.log(info);\n    return info;\n}\nasync function $7ce76dd366e58a77$export$6ca2c30598d1bf61(postId, forum) {\n    const commentURL = $7ce76dd366e58a77$var$baseUrl + `${forum}/0/posts/${postId}.json`;\n    const options = {\n        method: \"DELETE\",\n        body: JSON.stringify(postId)\n    };\n    const response = await fetch(commentURL, options);\n    const info = await response.json();\n}\nasync function $7ce76dd366e58a77$export$45abfc3976589d02(userId) {\n    const commentURL = $7ce76dd366e58a77$var$baseUrl + `AllUsers/${userId}.json`;\n    const options = {\n        method: \"DELETE\"\n    };\n    const response = await fetch(commentURL, options);\n    const info = await response.json();\n    console.log(info);\n}\nasync function $7ce76dd366e58a77$export$4ca1c4cb170d1207(userId, commentId, commentContent) {\n    const url = $7ce76dd366e58a77$var$baseUrl + `AllUsers/${userId}/comments/${commentId}/${commentContent}.json`;\n    // const url = baseUrl + `AllUsers/-NtVjmivseXUbEYBwlrL/comments.json`;\n    const options = {\n        method: \"GET\",\n        headers: $7ce76dd366e58a77$var$header\n    };\n    console.log(\"Fetching comments for user with ID:\", userId);\n    console.log(\"URL:\", url);\n    try {\n        const response = await fetch(url, options);\n        if (!response.ok) throw new Error(\"Failed to fetch comments\");\n        const data = await response.json();\n        if (data) {\n            // Konvertera datan till en array av kommentarer\n            const comments = Object.values(data);\n            return comments;\n        } else return [];\n    } catch (error) {\n        console.error(\"Error fetching comments:\", error);\n        throw error;\n    }\n}\n\n});\n\nparcelRegister(\"2DCO9\", function(module, exports) {\n\n$parcel$export(module.exports, \"createAndAppend\", () => $ba8d882d2e764409$export$a7b7629ccdaa695d);\nfunction $ba8d882d2e764409$export$a7b7629ccdaa695d(parent, elementName, textContent) {\n    const element = document.createElement(elementName);\n    if (elementName != \"div\" && elementName != \"img\") element.innerText = textContent;\n    parent.append(element);\n    return element;\n}\n // Såhär funkar denna:\n // du hämtar en klass/id från html med queryselector ex \"postSection\"\n // för att sedan ska ett \"postCard\" som är en div:\n // const postCard = createAndAppend(postSection, 'div')\n // const postCardTitle = createAndAppend(postCard, 'h3', 'Detta är titelm')\n // const postCardText = createAndAppend(postCard, 'p', 'Detta är textinnehållet i posten')\n\n});\n\nparcelRegister(\"j2nI3\", function(module, exports) {\nmodule.exports = new URL(\"pig.259b56e2.jpeg\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"9SEX7\", function(module, exports) {\nmodule.exports = new URL(\"cow.5e4743a9.jpeg\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"hC4Lz\", function(module, exports) {\nmodule.exports = new URL(\"chick.fc389aad.jpeg\", import.meta.url).toString();\n\n});\n\nvar $a6d2658688757f98$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"c9cyC\",\"visitprofile.31baa57f.js\",\"jHcLR\",\"pig.259b56e2.jpeg\",\"4pF8D\",\"cow.5e4743a9.jpeg\",\"80Qni\",\"chick.fc389aad.jpeg\"]'));\n\n\nvar $1ahZW = parcelRequire(\"1ahZW\");\n\nvar $2DCO9 = parcelRequire(\"2DCO9\");\n//Hämtar den inloggade användaren samt dess posts\nconst $2818c81cbf930c85$var$userId = localStorage.getItem(\"userId\");\nconsole.log($2818c81cbf930c85$var$userId);\n\n\n\n(0, $1ahZW.getYourUser)($2818c81cbf930c85$var$userId).then((data)=>{\n    const usernameInHeader = document.querySelector(\".username\");\n    usernameInHeader.textContent = data.username;\n    const profileImage = document.getElementById(\"profilePicture\");\n    if (data.userImage == \"pig\") {\n        const imageLink = new URL((parcelRequire(\"j2nI3\")));\n        profileImage.src = imageLink.toString();\n    } else if (data.userImage == \"cow\") {\n        const imageLink = new URL((parcelRequire(\"9SEX7\")));\n        profileImage.src = imageLink.toString();\n    } else {\n        const imageLink = new URL((parcelRequire(\"hC4Lz\")));\n        profileImage.src = imageLink.toString();\n    }\n});\n// Funktion för att fylla dropdown-listan med användarnamn\nasync function $2818c81cbf930c85$var$fillUserDropdown(selectedUserId) {\n    try {\n        console.log(\"Filling user dropdown...\"); // Kontrollmeddelande för att se om funktionen körs\n        const users = await (0, $1ahZW.allUsers)(); // Hämta användaruppgifter från Firebase\n        // console.log(\"Users from Firebase:\", users); // Kontrollera om data hämtas korrekt\n        const userDropdown = document.getElementById(\"userDropdown\");\n        if (userDropdown) {\n            userDropdown.innerHTML = \" \"; // Rensa dropdown-listan innan fyllning\n            for(const userId in users){\n                const username = users[userId].username;\n                const option = document.createElement(\"option\");\n                option.value = userId;\n                option.textContent = username;\n                option.selected = userId == selectedUserId;\n                userDropdown.appendChild(option);\n            }\n        }\n        console.log(\"User dropdown filled successfully.\");\n    } catch (error) {\n        console.error(\"Error filling user dropdown:\", error);\n    }\n}\n\n\n\nfunction $2818c81cbf930c85$var$navigateToUserProfile(selectedUserId) {\n    $2818c81cbf930c85$var$fillUserDropdown(selectedUserId).then(()=>{\n        const userDropdown = document.getElementById(\"userDropdown\");\n        userDropdown.addEventListener(\"change\", (event)=>{\n            let selectedUserId = event.target.value;\n            console.log(selectedUserId);\n            if ($2818c81cbf930c85$var$userId) (0, $1ahZW.getYourUser)(selectedUserId).then((data)=>{\n                console.log(data.username);\n                const visitedProfileUsername = document.querySelector(\".visitedProfileUsername\");\n                visitedProfileUsername.textContent = data.username;\n                const profileImageX2 = document.getElementById(\"profilePicturex2\");\n                if (data.userImage == \"pig\") {\n                    const imageLink = new URL((parcelRequire(\"j2nI3\")));\n                    profileImageX2.src = imageLink.toString();\n                } else if (data.userImage == \"cow\") {\n                    const imageLink = new URL((parcelRequire(\"9SEX7\")));\n                    profileImageX2.src = imageLink.toString();\n                } else {\n                    const imageLink = new URL((parcelRequire(\"hC4Lz\")));\n                    profileImageX2.src = imageLink.toString();\n                }\n                const visitedProfileUser = document.querySelector(\".visitedProfileUser\");\n                visitedProfileUser.innerHTML = `${data.username}'s latest posts:`;\n                const commentSection = document.querySelector(\".latestComments\");\n                commentSection.innerHTML = \" \";\n                // (document.querySelector(\".lastComments\") as HTMLDivElement).innerHTML = \"\";\n                $2818c81cbf930c85$var$displayPostsInProfile(selectedUserId, \"forum1\");\n                $2818c81cbf930c85$var$displayPostsInProfile(selectedUserId, \"forum2\");\n                $2818c81cbf930c85$var$displayPostsInProfile(selectedUserId, \"forum3\");\n            });\n        });\n        userDropdown.dispatchEvent(new Event(\"change\"));\n    });\n}\n///////////////////////////\n///////////////////////////\nconst $2818c81cbf930c85$var$selectedUserId = new URLSearchParams(window.location.search).get(\"userId\") ?? localStorage.getItem(\"userId\");\nwindow.history.replaceState({}, document.title, \"visitprofile.html\");\n// Anropa funktionen för att fylla dropdown-listan när sidan laddas\n$2818c81cbf930c85$var$navigateToUserProfile($2818c81cbf930c85$var$selectedUserId);\nasync function $2818c81cbf930c85$var$displayPostsInProfile(userId, forum) {\n    const posts = await (0, $1ahZW.getpostsFromUsers)(forum);\n    // userId = userId;\n    let postId;\n    for(postId in posts){\n        var post = posts[postId];\n        if (post.userID === userId) $2818c81cbf930c85$var$createCommentsInProfile(postId, post.postContent);\n    }\n}\nasync function $2818c81cbf930c85$var$createCommentsInProfile(postId, postContent) {\n    const commentSection = document.querySelector(\".latestComments\");\n    const eachCommentCard = (0, $2DCO9.createAndAppend)(commentSection, \"div\", \" \");\n    eachCommentCard.id = postId;\n    const latestPosts = (0, $2DCO9.createAndAppend)(eachCommentCard, \"p\", postContent);\n    localStorage.setItem(\"postId\", postId);\n}\n\n\n//# sourceMappingURL=visitprofile.31baa57f.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","const baseUrl = \"https://slutprojekt-js2-socialmedia-default-rtdb.europe-west1.firebasedatabase.app/\"\n\nconst header = {\n    \"Content-type\": \"application/json; charset=UTF-8\"\n}\n\nasync function get() {\n    const URL = baseUrl + '.json';\n\n    const options = {\n        method: 'GET',\n        headers: header\n    }\n\n    const response = await fetch(URL, options);\n    const info = await response.json();\n    console.log(info)\n    return info;\n}\n\nasync function getpostsFromUsers(forum: string) {\n    const URL = baseUrl + `${forum}/0/posts/.json`;\n\n    const options = {\n        method: 'GET',\n        headers: header\n    }\n\n    const response = await fetch(URL, options);\n    const info = await response.json();\n    // console.log(info)\n    return info;\n}\n\nasync function getLoginUser() {\n    const URL = baseUrl + 'AllUsers/.json'\n\n    const options = {\n        method: 'GET',\n        headers: header\n    }\n\n    const response = await fetch(URL, options);\n    const data = await response.json();\n    console.log(data);\n    return data;\n}\n\nasync function getYourUser(userId: string) {\n    const URL = baseUrl + `AllUsers/${userId}.json`\n\n    const options = {\n        method: 'GET',\n        headers: header\n    }\n\n    const response = await fetch(URL, options);\n    const data = await response.json();\n    console.log(data);\n    return data;\n}\n\nasync function postNewUser(newUser: any) {\n    const url = baseUrl + 'AllUsers/.json';\n\n    const options = {\n        method: 'POST',\n        body: JSON.stringify(newUser),\n        headers: header\n    }\n\n    const response = await fetch(url, options);\n    const info = await response.json();\n    console.log(info);\n    return info;\n\n}\n\nasync function allUsers(): Promise<any> {\n    const url = 'https://slutprojekt-js2-socialmedia-default-rtdb.europe-west1.firebasedatabase.app/AllUsers.json';\n\n    const options = {\n        method: 'GET',\n        headers: header\n    }\n\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(\"Error fetching all users:\", error);\n        throw error;\n    }\n}\n\nasync function postForum1(postData: any) {\n    const URL = baseUrl + 'forum1/0/posts.json';\n\n    const options = {\n        method: 'POST',\n        body: JSON.stringify(postData),\n        headers: header\n    }\n\n    const response = await fetch(URL, options);\n    const info = await response.json();\n    console.log(info)\n    return info;\n}\n\nasync function postCommentForum1(comment: object, postId: string) {\n    const URL = baseUrl + `forum1/0/comments/${postId}/allCommentId.json`;\n\n    const options = {\n        method: 'POST',\n        body: JSON.stringify(comment),\n        headers: header\n    }\n\n\n    const response = await fetch(URL, options);\n    const info = await response.json();\n    console.log(info)\n    return info;\n}\n// async function getCommentsFromForum(forum: string, postId: string) {\n//     const URL = baseUrl + `${forum}/0/comments/${postId}.json`;\n\n//     const options = {\n//         method: 'GET',\n//         headers: header\n//     }\n\n//     const response = await fetch(URL, options);\n//     const info = await response.json();\n//     console.log(info)\n//     return info;\n// }\n\nasync function postForum2(postData: any) {\n    const URL = baseUrl + 'forum2/0/posts.json';\n\n    const options = {\n        method: 'POST',\n        body: JSON.stringify(postData),\n        headers: header\n    }\n\n    const response = await fetch(URL, options);\n    const info = await response.json();\n    console.log(info)\n    return info;\n}\n\nasync function postForum3(postData: any) {\n    const URL = baseUrl + 'forum3/0/posts.json';\n\n    const options = {\n        method: 'POST',\n        body: JSON.stringify(postData),\n        headers: header\n    }\n\n    const response = await fetch(URL, options);\n    const info = await response.json();\n    console.log(info)\n    return info;\n}\n\nasync function deletePost(postId: string, forum: string) {\n    const commentURL = baseUrl + `${forum}/0/posts/${postId}.json`;\n\n    const options = {\n        method: 'DELETE',\n        body: JSON.stringify(postId),\n    }\n\n    const response = await fetch(commentURL, options);\n    const info = await response.json();\n}\n\nasync function deleteAccount(userId: string) {\n    const commentURL = baseUrl + `AllUsers/${userId}.json`;\n\n    const options = {\n        method: 'DELETE'\n    }\n\n    const response = await fetch(commentURL, options);\n    const info = await response.json();\n    console.log(info)\n}\n\nasync function getCommentsInProfile(userId: string, commentId: string, commentContent: string) {\n    const url = baseUrl + `AllUsers/${userId}/comments/${commentId}/${commentContent}.json`;\n    // const url = baseUrl + `AllUsers/-NtVjmivseXUbEYBwlrL/comments.json`;\n\n    const options = {\n        method: 'GET',\n        headers: header\n    }\n    console.log(\"Fetching comments for user with ID:\", userId);\n    console.log(\"URL:\", url);\n\n    try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n            throw new Error('Failed to fetch comments');\n        }\n        const data = await response.json();\n        if (data) {\n            // Konvertera datan till en array av kommentarer\n            const comments: Comment[] = Object.values(data);\n            return comments;\n        } else {\n            return [];\n        }\n    } catch (error) {\n        console.error(\"Error fetching comments:\", error);\n        throw error;\n    }\n}\n\nexport { get, getpostsFromUsers, getLoginUser, getYourUser, postNewUser, allUsers, postForum1, postForum2, postForum3, postCommentForum1, deletePost, deleteAccount, getCommentsInProfile }\n\n","export function createAndAppend(parent: HTMLDivElement, elementName: string, textContent: any): HTMLElement {\n\n    const element = document.createElement(elementName);\n    if (elementName != 'div' && elementName != 'img') element.innerText = textContent;\n\n    parent.append(element);\n\n    return element;\n};\n\n\n// Såhär funkar denna:\n// du hämtar en klass/id från html med queryselector ex \"postSection\"\n// för att sedan ska ett \"postCard\" som är en div:\n// const postCard = createAndAppend(postSection, 'div')\n// const postCardTitle = createAndAppend(postCard, 'h3', 'Detta är titelm')\n// const postCardText = createAndAppend(postCard, 'p', 'Detta är textinnehållet i posten')","module.exports = new __parcel__URL__(\"pig.259b56e2.jpeg\").toString();","module.exports = new __parcel__URL__(\"cow.5e4743a9.jpeg\").toString();","module.exports = new __parcel__URL__(\"chick.fc389aad.jpeg\").toString();","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"c9cyC\\\",\\\"visitprofile.31baa57f.js\\\",\\\"jHcLR\\\",\\\"pig.259b56e2.jpeg\\\",\\\"4pF8D\\\",\\\"cow.5e4743a9.jpeg\\\",\\\"80Qni\\\",\\\"chick.fc389aad.jpeg\\\"]\"));","import { allUsers, getYourUser, getpostsFromUsers } from \"./fetch\"; // Importera funktionen för att hämta användarens kommentarer\nimport { createAndAppend } from \"./createAndAppend\"; // Importera hjälpfunktionen för att skapa och lägga till element i DOM:en\n\n//Hämtar den inloggade användaren samt dess posts\nconst userId = localStorage.getItem('userId') as string;\nconsole.log(userId)\n\ngetYourUser(userId).then(data => {\n    const usernameInHeader = document.querySelector('.username') as HTMLParagraphElement;\n    usernameInHeader.textContent = data.username;\n\n    const profileImage = document.getElementById('profilePicture') as HTMLImageElement;\n\n    if (data.userImage == 'pig') {\n        const imageLink = new URL('../media/img/pig.jpeg', import.meta.url)\n        profileImage.src = imageLink.toString();\n    } else if (data.userImage == 'cow') {\n        const imageLink = new URL('../media/img/cow.jpeg', import.meta.url)\n        profileImage.src = imageLink.toString();\n    } else {\n        const imageLink = new URL('../media/img/chick.jpeg', import.meta.url)\n        profileImage.src = imageLink.toString();\n    }\n});\n\n// Funktion för att fylla dropdown-listan med användarnamn\nasync function fillUserDropdown(selectedUserId: string): Promise<void> {\n    try {\n        console.log(\"Filling user dropdown...\"); // Kontrollmeddelande för att se om funktionen körs\n\n        const users = await allUsers(); // Hämta användaruppgifter från Firebase\n        // console.log(\"Users from Firebase:\", users); // Kontrollera om data hämtas korrekt\n\n        const userDropdown = document.getElementById(\"userDropdown\") as HTMLSelectElement;\n\n        if (userDropdown) {\n            userDropdown.innerHTML = \" \"; // Rensa dropdown-listan innan fyllning\n\n            for (const userId in users) {\n                const username = users[userId].username;\n                const option = document.createElement(\"option\");\n                option.value = userId;\n                option.textContent = username;\n                option.selected = (userId == selectedUserId);\n                userDropdown.appendChild(option);\n            }\n        }\n        console.log(\"User dropdown filled successfully.\");\n    } catch (error) {\n        console.error(\"Error filling user dropdown:\", error);\n    }\n}\n\nfunction navigateToUserProfile(selectedUserId: string) {\n    fillUserDropdown(selectedUserId).then(() => {\n        const userDropdown = document.getElementById(\"userDropdown\") as HTMLSelectElement;\n\n        userDropdown.addEventListener('change', (event) => {\n            let selectedUserId = (event.target as HTMLSelectElement).value;\n\n            console.log(selectedUserId)\n\n            if (userId) {\n                getYourUser(selectedUserId).then(data => {\n                    console.log(data.username)\n                    const visitedProfileUsername = document.querySelector('.visitedProfileUsername') as HTMLParagraphElement;\n                    visitedProfileUsername.textContent = data.username;\n\n                    const profileImageX2 = document.getElementById('profilePicturex2') as HTMLImageElement;\n\n                    if (data.userImage == 'pig') {\n                        const imageLink = new URL('../media/img/pig.jpeg', import.meta.url)\n                        profileImageX2.src = imageLink.toString();\n                    } else if (data.userImage == 'cow') {\n                        const imageLink = new URL('../media/img/cow.jpeg', import.meta.url)\n                        profileImageX2.src = imageLink.toString();\n                    } else {\n                        const imageLink = new URL('../media/img/chick.jpeg', import.meta.url)\n                        profileImageX2.src = imageLink.toString();\n                    }\n                    const visitedProfileUser = document.querySelector('.visitedProfileUser') as HTMLElement;\n                    visitedProfileUser.innerHTML = `${data.username}'s latest posts:`\n\n                    const commentSection = document.querySelector('.latestComments') as HTMLDivElement;\n                    commentSection.innerHTML = \" \";\n                    // (document.querySelector(\".lastComments\") as HTMLDivElement).innerHTML = \"\";\n\n                    displayPostsInProfile(selectedUserId, 'forum1');\n                    displayPostsInProfile(selectedUserId, 'forum2');\n                    displayPostsInProfile(selectedUserId, 'forum3');\n\n                })\n            }\n\n        })\n        userDropdown.dispatchEvent(new Event(\"change\"));\n    })\n}\n\n///////////////////////////\n///////////////////////////\n\nconst selectedUserId = (new URLSearchParams(window.location.search).get(\"userId\") ?? localStorage.getItem('userId')) as string;\nwindow.history.replaceState({}, document.title, \"visitprofile.html\");\n\n// Anropa funktionen för att fylla dropdown-listan när sidan laddas\nnavigateToUserProfile(selectedUserId);\n\nasync function displayPostsInProfile(userId: string, forum: string) {\n    const posts = await getpostsFromUsers(forum);\n    // userId = userId;\n    let postId: string;\n\n    for (postId in posts) {\n\n        var post = posts[postId];\n\n        if (post.userID === userId) {\n            createCommentsInProfile(postId, post.postContent)\n        }\n    }\n}\n\nasync function createCommentsInProfile(postId: any, postContent: string) {\n\n    const commentSection = document.querySelector('.latestComments') as HTMLDivElement;\n\n    const eachCommentCard = createAndAppend(commentSection, 'div', ' ') as HTMLDivElement;\n    eachCommentCard.id = postId\n\n    const latestPosts = createAndAppend(eachCommentCard, 'p', postContent)\n    localStorage.setItem('postId', postId)\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","$7ce76dd366e58a77$export$757394d2bc56a6a9","$7ce76dd366e58a77$export$2f82891cea95bf3d","$7ce76dd366e58a77$export$26939fe54a60a9f0","$7ce76dd366e58a77$export$6001962e8d53e271","$7ce76dd366e58a77$export$a2e86eb8fefb17fd","$7ce76dd366e58a77$export$b6c7da38e66215af","$7ce76dd366e58a77$export$3e7a6a8197e1d931","$7ce76dd366e58a77$export$a74f6de8490a9db3","$7ce76dd366e58a77$export$b7c2ab1ee09212e3","$7ce76dd366e58a77$export$45abfc3976589d02","$7ce76dd366e58a77$var$baseUrl","$7ce76dd366e58a77$var$header","forum","URL","response","fetch","method","headers","json","data","console","log","userId","newUser","options","body","JSON","stringify","info","error","postData","comment","postId","commentURL","$ba8d882d2e764409$export$a7b7629ccdaa695d","parent","elementName","textContent","element","document","createElement","innerText","append","url","toString","parse","$1ahZW","$2DCO9","$2818c81cbf930c85$var$userId","localStorage","getItem","$2818c81cbf930c85$var$fillUserDropdown","selectedUserId","users","allUsers","userDropdown","getElementById","innerHTML","username","option","value","selected","appendChild","getYourUser","then","usernameInHeader","querySelector","profileImage","userImage","imageLink","src","$2818c81cbf930c85$var$selectedUserId","URLSearchParams","window","location","search","$2818c81cbf930c85$var$displayPostsInProfile","posts","getpostsFromUsers","post","userID","$2818c81cbf930c85$var$createCommentsInProfile","postContent","commentSection","eachCommentCard","createAndAppend","setItem","history","replaceState","title","$2818c81cbf930c85$var$navigateToUserProfile","addEventListener","event","target","visitedProfileUsername","profileImageX2","visitedProfileUser","dispatchEvent","Event"],"version":3,"file":"visitprofile.31baa57f.js.map"}